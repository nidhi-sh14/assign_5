//assignment 5 Q1
using System;

public class Example
{
   public static void Main()
   {
      int number1 = 3000;
      int number2 = 0;
      try {
         Console.WriteLine(number1 / number2);
      }
      catch (DivideByZeroException) {
         Console.WriteLine("Division of {0} by zero.", number1);
      }
   }
}

// Ques 2
using System;
class Program
{
    static void Main()
    {
        int[] numbers = { 1, 2, 3, 4, 5 };

        try
        {
            int value = numbers[10];
            Console.WriteLine($"Value: {value}");
        }
        catch (IndexOutOfRangeException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }

        Console.ReadLine();
    }
}


//quest 3
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        string userInput = Console.ReadLine();

        try
        {
            int number = int.Parse(userInput);
            Console.WriteLine($"Successfully parsed: {number}");
        }
        catch (FormatException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
                 }

        Console.ReadLine();
    }
}

//ques 4
using System;
public class CustomException : Exception
{
    public CustomException(string message) : base(message)
    {
    }
}

class Program
{
    static void Main()
    {
        Console.Write("Enter a positive number: ");
        string userInput = Console.ReadLine();

        try
        {
            int number = int.Parse(userInput);
            if (number < 0)
            {
                 
                
                                throw new CustomException("Negative numbers are not allowed.");
            }

            Console.WriteLine($"Entered number: {number}");
        }
        catch (FormatException ex)
        {
            Console.WriteLine($"Error: {ex.Message}. Please enter a valid number.");
        }
        catch (CustomException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Unexpected error: {ex.Message}");
        }

        Console.ReadLine();
    }
}

//ques 5
using System;

class Program
{
    static void Main()
    {
        try
        {
            
            int[] numbers = { 1, 2, 3 };
            int value = numbers[10];
            Console.Write("Enter a number: ");
            string userInput = Console.ReadLine();
            int number = int.Parse(userInput);

        
            throw new InvalidOperationException("This is an invalid operation exception.");
        }
        catch (IndexOutOfRangeException ex)
        {
            Console.WriteLine($"IndexOutOfRangeException: {ex.Message}");
        }
        catch (FormatException ex)
        {
            Console.WriteLine($"FormatException: {ex.Message}");
        }
        catch (InvalidOperationException ex)
        {
            Console.WriteLine($"InvalidOperationException: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Generic Exception: {ex.Message}");
        }

        Console.ReadLine();
    }
}
//quest 6
using System;

class Program
{
    static void Main()
    {
        try
        {
            Console.WriteLine("Outer Try Block");

            try
            {
                Console.WriteLine("Inner Try Block");

                throw new InvalidOperationException("Exception in the inner block");
            }
            catch (Exception innerException)
            {
                Console.WriteLine($"Inner Catch Block: {innerException.Message}");
            }

            Console.WriteLine("After Inner Try Block");
        }
        catch (Exception outerException)
        {
            Console.WriteLine($"Outer Catch Block: {outerException.Message}");
        }

        Console.ReadLine();
    }
}
//ques 7
using System;

class Program
{
    static void Main()
    {
        bool validInput = false;

        do
        {
            try
            {
                Console.Write("Enter the numerator: ");
                int numerator = int.Parse(Console.ReadLine());

                Console.Write("Enter the denominator: ");
                int denominator = int.Parse(Console.ReadLine());

                if (denominator == 0)
                {
                    throw new DivideByZeroException("Cannot divide by zero. Please enter a non-zero denominator.");
                }

                int result = numerator / denominator;

                Console.WriteLine($"Result: {numerator} / {denominator} = {result}");

                validInput = true; 
            }
            catch (FormatException)
            {
                Console.WriteLine("Invalid input. Please enter a valid integer.");
            }
            catch (DivideByZeroException ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Unexpected error: {ex.Message}");
            }

        } while (!validInput);

        Console.ReadLine();
    }
}
//ques 9
using System;

class Program
{
    static void Main()
    {
        try
        {
            ProcessData();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Caught in Main Catch Block: {ex.Message}");
        }

        Console.ReadLine();
    }

    static void ProcessData()
    {
        try
        {
        
            int result = DivideByZero();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Caught in ProcessData Catch Block: {ex.Message}");

            throw;
        }
    }

    static int DivideByZero()
    {
        int numerator = 10;
        int denominator = 0;

        return numerator / denominator;
    }
}
//ques 9
using System;

class Calculator
{
    static void Main()
    {
        while (true)
        {
            Console.WriteLine("Simple Calculator");
            Console.WriteLine("1. Addition");
            Console.WriteLine("2. Subtraction");
            Console.WriteLine("3. Multiplication");
            Console.WriteLine("4. Division");
            Console.WriteLine("5. Exit");

            Console.Write("Enter your choice (1-5): ");
            string choice = Console.ReadLine();

            if (choice == "5")
            {
                Console.WriteLine("Exiting the calculator");
                break;
            }

            try
            {
                Console.Write("Enter the first number: ");
                double num1 = double.Parse(Console.ReadLine());

                Console.Write("Enter the second number: ");
                double num2 = double.Parse(Console.ReadLine());

                switch (choice)
                {
                    case "1":
                        Console.WriteLine($"Result: {num1} + {num2} = {Addition(num1, num2)}");
                        break;
                    case "2":
                        Console.WriteLine($"Result: {num1} - {num2} = {Subtraction(num1, num2)}");
                        break;
                    case "3":
                        Console.WriteLine($"Result: {num1} * {num2} = {Multiplication(num1, num2)}");
                        break;
                    case "4":
                        Console.WriteLine($"Result: {num1} / {num2} = {Division(num1, num2)}");
                        break;
                    default:
                        Console.WriteLine("Invalid choice. Please enter a number between 1 and 5.");
                        break;
                }
            }
            catch (FormatException)
            {
                Console.WriteLine("Invalid input. Please enter valid numeric values.");
            }
       
